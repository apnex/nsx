#!/bin/bash
# detect and resolve symlink
if [[ -L $0 ]]; then
	if [[ $(readlink $0) =~ ^(.*)/[^/]+$ ]]; then
		WORKDIR="${BASH_REMATCH[1]}"
	fi
else
	if [[ $0 =~ ^(.*)/[^/]+$ ]]; then
		WORKDIR="${BASH_REMATCH[1]}"
	fi
fi

# detect available cmds
commands() {
	echo "-- [COMMANDS] --"
	for FILE in ${WORKDIR}/cmd*.sh; do
		if [[ $FILE =~ cmd[.](.+)[.]sh ]]; then
			echo "${BASH_REMATCH[1]}"
		fi
	done
	exit 1
}
if [ -n "$1" ]; then
	if [ "$1" == "list" ]; then
		commands
	fi
	if [ -f "${WORKDIR}/cmd.${1}.sh" ]; then
		eval "${WORKDIR}/cmd.${1}.sh ${2} ${3} ${4}"
	fi
fi

# get OSNAME
OSNAME="$(uname -s)"
case "${OSNAME}" in
	Linux*)
		#printf "HAHA you run a L:${OSNAME}\n" 1>&2
	;;
	Darwin*)
		#printf "HAHA you run a D:${OSNAME}\n" 1>&2
	;;
esac

# COLOURS
NC='\033[0m' # no colour
BLACK='\033[0;30m' # black
RED='\033[0;31m' # red
GREEN='\033[0;32m' # green
ORANGE='\033[0;33m' # orange
BLUE='\033[0;34m' # blue
PURPLE='\033[0;35m' # purple
CYAN='\033[0;36m' # cyan
LIGHTGREY='\033[0;37m' # light grey
DARKGREY='\033[0;30m' # dark grey
LIGHTRED='\033[0;31m' # light red
LIGHTGREEN='\033[0;32m' # light green
YELLOW='\033[0;33m' # yellow
LIGHTBLUE='\033[0;34m' # light blue
LIGHTPURPLE='\033[0;35m' # light purple
LIGHTCYAN='\033[0;36m' # light cyan
WHITE='\033[0;37m' # white

function corange {
	local STRING=${1}
	printf "${ORANGE}${STRING}${NC}"
}
function cgreen {
	local STRING=${1}
	printf "${GREEN}${STRING}${NC}"
}
function ccyan {
	local STRING=${1}
	printf "${CYAN}${STRING}${NC}"
}

function isSuccess {
	local STRING=${1}
	if [[ $STRING =~ ^(.*)([0-9]{3})$ ]]; then
		local BODY=${BASH_REMATCH[1]}
		local CODE=${BASH_REMATCH[2]}
	fi
	printf "[$(ccyan "${CODE}")] - " 1>&2
	if [[ $CODE =~ 2..$ ]]; then
		printf "SUCCESS\n" 1>&2
	else
		printf "ERROR\n" 1>&2
	fi
	printf "%s\n" "${BODY}"
}

function getFile {
	local ENDPOINT=${1}
	local BASE=${2}
	if [[ -n $BASE ]]; then
		REGEX="^($BASE)"
		if [[ $ENDPOINT =~ $REGEX ]]; then
			ENDPOINT=${ENDPOINT#*"${BASH_REMATCH[1]}"}
		fi
	fi
	while [[ $ENDPOINT =~ ([^/]+) ]]; do
		ENDPOINT=${ENDPOINT#*"${BASH_REMATCH[1]}"}
		STATE+=".${BASH_REMATCH[1]}"
	done
	STATE+=".json"
	printf "${STATE}"
}

function getThumbprint {
	local HOST="${1}"
	PAYLOAD=$(echo -n | openssl s_client -connect "${HOST}" 2>/dev/null)
	PRINT=$(echo "$PAYLOAD" | openssl x509 -noout -fingerprint -sha256)
	REGEX='^(.*)=(([0-9A-Fa-f]{2}[:])+([0-9A-Fa-f]{2}))$'
	if [[ $PRINT =~ $REGEX ]]; then
		TYPE=${BASH_REMATCH[1]}
		CODE=${BASH_REMATCH[2]}
	fi
	printf "%s\n" "${CODE}" |  sed "s/\(.*\)/\L\1/g" | sed "s/://g"
}

function getCertificate {
	local HOST="${1}"
	PAYLOAD=$(echo -n | openssl s_client -connect "${HOST}" 2>/dev/null)
	RESULT=$(echo "${PAYLOAD}" |  sed -e '1h;2,$H;$!d;g' -e 's/.*\(-----BEGIN\sCERTIFICATE-----.*-----END\sCERTIFICATE-----\).*/\1/g')
	printf "%s\n" "$RESULT" | sed ':a;N;$!ba;s/\n/\\\\n/g'
}
