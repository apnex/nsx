#!/bin/bash
DOMAIN=$(cat sddc.parameters | jq -r '.domain')
SPEC=$(cat sddc.parameters | jq -r '.endpoints[] | select(.type=="nsx")')
NSXHOST=$(echo "$SPEC" | jq -r '.hostname')
if [[ ! "$NSXHOST" =~ ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]; then
	NSXHOST+=".$DOMAIN"
fi
NSXUSER=$(echo "$SPEC" | jq -r '.username')
NSXPASS=$(echo "$SPEC" | jq -r '.password')
NSXONLINE=$(echo "$SPEC" | jq -r '.online')
NSXSESSION='state/nsx-cookies.txt'
if [ ! -d state ]; then
	mkdir state;
fi

function nsxLogin {
	URL="https://$NSXHOST/api/session/create"
	curl -k -c state/nsx-cookies.txt -D state/nsx-headers.txt -X POST \
	-d "j_username=$NSXUSER&j_password=$NSXPASS" \
	"$URL" 1>/dev/null 2>/dev/null
}

function nsxSession {
	local SESSION=$NSXSESSION
	local ONLINE=$NSXONLINE
	if [[ "$ONLINE" == "true" ]]; then
		if [ -f $SESSION ]; then
			local RUNFIND="$(find ${SESSION} -cmin +10)"
			if [ -n "$RUNFIND" ]; then
				printf "Session older than [600] seconds, reauthenticating...\n" 1>&2
				nsxLogin
			fi
		else
			printf "File [$SESSION] does not exist - authenticating...\n" 1>&2
			nsxLogin
		fi
	fi
}

function nsxPost {
	local URL=${1}
	local BODY=${2}
	if [[ "$NSXONLINE" == "true" ]]; then
		RESPONSE=$(curl -k -b state/nsx-cookies.txt -w "%{http_code}" -X POST \
			-H "`grep X-XSRF-TOKEN state/nsx-headers.txt`" \
			-H "Content-Type: application/json" \
			-d "$BODY" \
		"$URL" 2>/dev/null)
		RESULT=$(isSuccess "${RESPONSE}")
	else
		printf "[$(ccyan "OFFLINE")] - SUCCESS\n" 1>&2
	fi
	printf "%s\n" "${RESULT}" | jq --tab .
}

function nsxDelete {
	local URL=${1}
	local BODY=${2}
	if [[ "$NSXONLINE" == "true" ]]; then
		STATE=$(getFile "${URL}")
		RESPONSE=$(curl -k -b state/nsx-cookies.txt -w "%{http_code}" -G -X DELETE \
			-H "`grep X-XSRF-TOKEN state/nsx-headers.txt`" \
			-H "Content-Type: application/x-form-urlencoded" \
			--data-urlencode "$BODY" \
		"$URL" 2>/dev/null)
		RESULT=$(isSuccess "${RESPONSE}")
	else
		printf "[$(ccyan "OFFLINE")] - SUCCESS\n" 1>&2
	fi
	#work out state synch for deletes
	printf "%s\n" "${RESULT}" | jq --tab .
}

function nsxGet {
	local URL=${1}
	if [[ "$NSXONLINE" == "true" ]]; then
		STATE=$(getFile "${URL}")
		RESPONSE=$(curl -k -b state/nsx-cookies.txt -w "%{http_code}" -X GET \
			-H "`grep X-XSRF-TOKEN state/nsx-headers.txt`" \
			-H "Content-Type: application/json" \
		"$URL" 2>/dev/null)
		RESULT=$(isSuccess "${RESPONSE}")
	else
		printf "[$(ccyan "OFFLINE")] - SUCCESS\n" 1>&2
		RESULT=$(cat "${URL}")
		STATE="${URL}"
	fi
	printf "%s\n" "${RESULT}" | jq --tab . >"${STATE}"
	printf "%s\n" "${RESULT}" | jq --tab .
}
